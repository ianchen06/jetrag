# https://www.serverless.com/blog/flask-python-rest-api-serverless-lambda-dynamodb
service: jetrag3-manager

provider:
  name: aws
  runtime: python3.9
  region: us-east-2
  memorySize: 128
  environment:
    JETRAG_ENV: ${env:JETRAG_ENV}
    SLACK_WEBHOOK_URL: ${env:SLACK_WEBHOOK_URL}
    INFO_SLACK_WEBHOOK_URL: ${env:INFO_SLACK_WEBHOOK_URL}
    MOOSEJAW_INFO_SLACK_WEBHOOK_URL: ${env:MOOSEJAW_INFO_SLACK_WEBHOOK_URL}
    ZAPPOS_INFO_SLACK_WEBHOOK_URL: ${env:ZAPPOS_INFO_SLACK_WEBHOOK_URL}
    BACKCOUNTRY_INFO_SLACK_WEBHOOK_URL: ${env:BACKCOUNTRY_INFO_SLACK_WEBHOOK_URL}
    RDS_AWS_SECRET_ACCESS_KEY: ${env:RDS_AWS_SECRET_ACCESS_KEY}
    RDS_AWS_ACCESS_KEY_ID: ${env:RDS_AWS_ACCESS_KEY_ID}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "arn:aws:dynamodb:*:*:table/jetrag3"
plugins:
  - serverless-wsgi
  - serverless-python-requirements
custom:
  pythonRequirements:
    dockerizePip: true
    dockerImage: mlupin/docker-lambda:python3.9-build
    slim: true
    slimPatternsAppendDefaults: false
    slimPatterns:
      - "donotremove"
  wsgi:
    app: jetrag/manager.app
    packRequirements: false
functions:
  app:
    timeout: 30
    handler: wsgi_handler.handler
    events:
      - http: ANY /
      - http: "ANY /{proxy+}"
package:
  patterns:
    - "!node_modules/**"
    - "!__pycache__/**"
    - "!.git/**"
    - "!venv/**"
